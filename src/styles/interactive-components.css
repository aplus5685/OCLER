/* ===== 인터랙티브 컴포넌트 라이브러리 ===== */
/* 오클러 상권 정보 플랫폼 전용 인터랙티브 UI 컴포넌트 */

/* ===== 시각적 피드백 컴포넌트 ===== */

/* 인터랙티브 버튼 효과 */
.interactive-btn {
  position: relative;
  overflow: hidden;
  background: var(--gradient-brand);
  border: none;
  border-radius: var(--radius-lg);
  padding: var(--spacing-4) var(--spacing-6);
  color: var(--color-text-primary);
  font-size: var(--text-base);
  font-weight: var(--font-semibold);
  cursor: pointer;
  transition: all var(--transition-base);
  box-shadow: var(--shadow-md);
  letter-spacing: var(--tracking-tight);
}

.interactive-btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: all 0.5s ease;
}

.interactive-btn:hover::before {
  width: 300%;
  height: 300%;
}

.interactive-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
}

.interactive-btn:active {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

/* 파티클 효과 버튼 */
.particle-btn {
  position: relative;
  background: var(--color-bg-secondary);
  border: 2px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-4) var(--spacing-6);
  color: var(--color-text-primary);
  cursor: pointer;
  overflow: hidden;
  transition: all var(--transition-base);
}

.particle-btn:hover {
  border-color: var(--color-brand-primary);
  box-shadow: 0 0 20px rgba(94, 106, 210, 0.3);
}

.particle-btn.particle-active::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 8px;
  height: 8px;
  background: var(--color-brand-primary);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: particleExplosion 0.6s ease-out forwards;
}

@keyframes particleExplosion {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(3);
  }
}

/* ===== 호버 효과 카드 ===== */
.hover-card {
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-xl);
  padding: var(--spacing-6);
  transition: all var(--transition-base);
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.hover-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(94, 106, 210, 0.1), transparent);
  transition: left 0.5s;
}

.hover-card:hover::before {
  left: 100%;
}

.hover-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-2xl);
  border-color: var(--color-brand-primary);
}

.hover-card-content {
  position: relative;
  z-index: 2;
}

/* ===== 애니메이션 아이콘 ===== */
.animated-icon {
  display: inline-block;
  transition: all var(--transition-base);
  cursor: pointer;
}

.animated-icon:hover {
  transform: scale(1.2) rotate(10deg);
}

.animated-icon.pulse {
  animation: iconPulse 2s infinite;
}

.animated-icon.bounce {
  animation: iconBounce 1s infinite;
}

.animated-icon.rotate {
  animation: iconRotate 2s linear infinite;
}

@keyframes iconPulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

@keyframes iconBounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-10px); }
  60% { transform: translateY(-5px); }
}

@keyframes iconRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* ===== 프로그레스 바 애니메이션 ===== */
.animated-progress {
  width: 100%;
  height: 12px;
  background: var(--color-bg-tertiary);
  border-radius: var(--radius-full);
  overflow: hidden;
  position: relative;
}

.animated-progress-bar {
  height: 100%;
  background: var(--gradient-brand);
  border-radius: var(--radius-full);
  transition: width 1s ease-out;
  position: relative;
}

.animated-progress-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.4), 
    transparent);
  animation: progressShimmer 2s infinite;
}

@keyframes progressShimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(200%); }
}

/* ===== 플립 카드 ===== */
.flip-card {
  background-color: transparent;
  width: 100%;
  height: 200px;
  perspective: 1000px;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  cursor: pointer;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: var(--radius-xl);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-6);
  box-shadow: var(--shadow-lg);
}

.flip-card-front {
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  color: var(--color-text-primary);
}

.flip-card-back {
  background: var(--gradient-brand);
  color: var(--color-text-primary);
  transform: rotateY(180deg);
}

/* ===== 모프 버튼 ===== */
.morph-btn {
  position: relative;
  background: var(--color-bg-secondary);
  border: 2px solid var(--color-brand-primary);
  border-radius: var(--radius-full);
  padding: var(--spacing-3) var(--spacing-6);
  color: var(--color-brand-primary);
  font-weight: var(--font-semibold);
  cursor: pointer;
  overflow: hidden;
  transition: all var(--transition-base);
}

.morph-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: var(--gradient-brand);
  transition: left var(--transition-base);
  z-index: 1;
}

.morph-btn:hover::before {
  left: 0;
}

.morph-btn:hover {
  color: var(--color-text-primary);
}

.morph-btn span {
  position: relative;
  z-index: 2;
}

/* ===== 글리치 효과 ===== */
.glitch-text {
  position: relative;
  color: var(--color-text-primary);
  font-weight: var(--font-bold);
  text-transform: uppercase;
  letter-spacing: var(--tracking-wider);
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  animation: glitch-1 0.5s infinite;
  color: var(--color-brand-primary);
  z-index: -1;
}

.glitch-text::after {
  animation: glitch-2 0.5s infinite;
  color: var(--color-brand-accent);
  z-index: -2;
}

@keyframes glitch-1 {
  0%, 14%, 15%, 49%, 50%, 99%, 100% {
    transform: translate(0);
  }
  15%, 49% {
    transform: translate(-2px, -1px);
  }
}

@keyframes glitch-2 {
  0%, 20%, 21%, 62%, 63%, 99%, 100% {
    transform: translate(0);
  }
  21%, 62% {
    transform: translate(2px, 1px);
  }
}

/* ===== 네온 효과 ===== */
.neon-text {
  color: var(--color-text-primary);
  text-shadow: 
    0 0 5px var(--color-brand-primary),
    0 0 10px var(--color-brand-primary),
    0 0 15px var(--color-brand-primary),
    0 0 20px var(--color-brand-primary);
  transition: all var(--transition-base);
}

.neon-text:hover {
  text-shadow: 
    0 0 5px var(--color-brand-accent),
    0 0 10px var(--color-brand-accent),
    0 0 15px var(--color-brand-accent),
    0 0 20px var(--color-brand-accent),
    0 0 35px var(--color-brand-accent);
}

.neon-border {
  border: 2px solid var(--color-brand-primary);
  border-radius: var(--radius-lg);
  box-shadow: 
    0 0 5px var(--color-brand-primary),
    inset 0 0 5px var(--color-brand-primary);
  transition: all var(--transition-base);
}

.neon-border:hover {
  box-shadow: 
    0 0 10px var(--color-brand-accent),
    0 0 20px var(--color-brand-accent),
    0 0 40px var(--color-brand-accent),
    inset 0 0 10px var(--color-brand-accent);
}

/* ===== 틸트 효과 ===== */
.tilt-card {
  perspective: 1000px;
  transform-style: preserve-3d;
  cursor: pointer;
}

.tilt-card-inner {
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-xl);
  padding: var(--spacing-6);
  transition: transform var(--transition-base);
  box-shadow: var(--shadow-lg);
}

.tilt-card:hover .tilt-card-inner {
  transform: rotateX(5deg) rotateY(5deg);
  box-shadow: var(--shadow-2xl);
}

/* ===== 물결 효과 ===== */
.wave-btn {
  position: relative;
  background: var(--gradient-brand);
  border: none;
  border-radius: var(--radius-lg);
  padding: var(--spacing-4) var(--spacing-6);
  color: var(--color-text-primary);
  font-weight: var(--font-semibold);
  cursor: pointer;
  overflow: hidden;
  transition: transform var(--transition-fast);
}

.wave-btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.3s ease, height 0.3s ease;
}

.wave-btn:active::before {
  width: 300px;
  height: 300px;
}

.wave-btn:active {
  transform: scale(0.98);
}

/* ===== 자기장 효과 ===== */
.magnetic-btn {
  position: relative;
  background: var(--color-bg-secondary);
  border: 2px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-4) var(--spacing-6);
  color: var(--color-text-primary);
  cursor: pointer;
  transition: all var(--transition-base);
  overflow: hidden;
}

.magnetic-btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: var(--gradient-brand);
  border-radius: inherit;
  transform: translate(-50%, -50%) scale(0);
  transition: transform var(--transition-base);
  z-index: -1;
}

.magnetic-btn:hover::after {
  transform: translate(-50%, -50%) scale(1);
}

.magnetic-btn:hover {
  color: var(--color-text-primary);
  border-color: var(--color-brand-primary);
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
}

/* ===== 로딩 스피너 컬렉션 ===== */
.spinner-collection {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-4);
  padding: var(--spacing-8);
}

.spinner-dots {
  display: flex;
  gap: var(--spacing-1);
}

.spinner-dot {
  width: 8px;
  height: 8px;
  background: var(--color-brand-primary);
  border-radius: 50%;
  animation: dotPulse 1.4s ease-in-out infinite both;
}

.spinner-dot:nth-child(1) { animation-delay: -0.32s; }
.spinner-dot:nth-child(2) { animation-delay: -0.16s; }
.spinner-dot:nth-child(3) { animation-delay: 0s; }

@keyframes dotPulse {
  0%, 80%, 100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

.spinner-bars {
  display: flex;
  gap: 2px;
  align-items: end;
  height: 20px;
}

.spinner-bar {
  width: 3px;
  background: var(--color-brand-primary);
  animation: barStretch 1.2s ease-in-out infinite;
}

.spinner-bar:nth-child(1) { animation-delay: -1.1s; }
.spinner-bar:nth-child(2) { animation-delay: -1.0s; }
.spinner-bar:nth-child(3) { animation-delay: -0.9s; }
.spinner-bar:nth-child(4) { animation-delay: -0.8s; }
.spinner-bar:nth-child(5) { animation-delay: -0.7s; }

@keyframes barStretch {
  0%, 40%, 100% {
    height: 4px;
  }
  20% {
    height: 20px;
  }
}

/* ===== 마우스 추적 효과 ===== */
.mouse-tracker {
  position: relative;
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-xl);
  padding: var(--spacing-8);
  overflow: hidden;
  cursor: pointer;
}

.mouse-tracker::before {
  content: '';
  position: absolute;
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, rgba(94, 106, 210, 0.2) 0%, transparent 70%);
  border-radius: 50%;
  pointer-events: none;
  transition: all 0.3s ease;
  transform: translate(-50%, -50%);
  opacity: 0;
}

.mouse-tracker:hover::before {
  opacity: 1;
}

/* ===== 스태거 애니메이션 ===== */
.stagger-container {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
}

.stagger-item {
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  padding: var(--spacing-4);
  opacity: 0;
  transform: translateX(-20px);
  transition: all var(--transition-base);
}

.stagger-container.animate .stagger-item {
  opacity: 1;
  transform: translateX(0);
}

.stagger-container.animate .stagger-item:nth-child(1) { transition-delay: 0.1s; }
.stagger-container.animate .stagger-item:nth-child(2) { transition-delay: 0.2s; }
.stagger-container.animate .stagger-item:nth-child(3) { transition-delay: 0.3s; }
.stagger-container.animate .stagger-item:nth-child(4) { transition-delay: 0.4s; }
.stagger-container.animate .stagger-item:nth-child(5) { transition-delay: 0.5s; }

/* ===== 반응형 조정 ===== */
@media (max-width: 768px) {
  .hover-card:hover {
    transform: translateY(-2px);
  }
  
  .tilt-card:hover .tilt-card-inner {
    transform: rotateX(2deg) rotateY(2deg);
  }
  
  .magnetic-btn:hover {
    transform: translateY(-1px);
  }
  
  .spinner-collection {
    gap: var(--spacing-2);
    padding: var(--spacing-4);
  }
  
  .mouse-tracker::before {
    width: 150px;
    height: 150px;
  }
}

/* ===== 접근성 및 모션 감소 ===== */
@media (prefers-reduced-motion: reduce) {
  .interactive-btn::before,
  .hover-card::before,
  .animated-icon,
  .animated-progress-bar::after,
  .flip-card-inner,
  .morph-btn::before,
  .glitch-text::before,
  .glitch-text::after,
  .tilt-card-inner,
  .wave-btn::before,
  .magnetic-btn::after,
  .mouse-tracker::before,
  .stagger-item {
    animation: none;
    transition: none;
  }
  
  .hover-card:hover,
  .tilt-card:hover .tilt-card-inner,
  .magnetic-btn:hover,
  .flip-card:hover .flip-card-inner {
    transform: none;
  }
}

/* ===== 고대비 모드 지원 ===== */
@media (prefers-contrast: high) {
  .interactive-btn,
  .hover-card,
  .flip-card-front,
  .flip-card-back,
  .morph-btn,
  .magnetic-btn {
    border-width: 3px;
  }
  
  .neon-text,
  .neon-border {
    text-shadow: none;
    box-shadow: none;
  }
  
  .glitch-text::before,
  .glitch-text::after {
    display: none;
  }
}